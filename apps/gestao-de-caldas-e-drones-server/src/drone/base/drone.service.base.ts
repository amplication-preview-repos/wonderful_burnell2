/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Drone as PrismaDrone } from "@prisma/client";

export class DroneServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DroneCountArgs, "select">): Promise<number> {
    return this.prisma.drone.count(args);
  }

  async drones(args: Prisma.DroneFindManyArgs): Promise<PrismaDrone[]> {
    return this.prisma.drone.findMany(args);
  }
  async drone(args: Prisma.DroneFindUniqueArgs): Promise<PrismaDrone | null> {
    return this.prisma.drone.findUnique(args);
  }
  async createDrone(args: Prisma.DroneCreateArgs): Promise<PrismaDrone> {
    return this.prisma.drone.create(args);
  }
  async updateDrone(args: Prisma.DroneUpdateArgs): Promise<PrismaDrone> {
    return this.prisma.drone.update(args);
  }
  async deleteDrone(args: Prisma.DroneDeleteArgs): Promise<PrismaDrone> {
    return this.prisma.drone.delete(args);
  }
}
